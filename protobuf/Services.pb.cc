// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Services.proto

#include "Services.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace directoryd {
class TxtFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxtField>
      _instance;
} _TxtField_default_instance_;
class ServiceRequest_Register_LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRequest_Register_Location>
      _instance;
} _ServiceRequest_Register_Location_default_instance_;
class ServiceRequest_RegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRequest_Register>
      _instance;
} _ServiceRequest_Register_default_instance_;
class ServiceRequest_UnregisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRequest_Unregister>
      _instance;
} _ServiceRequest_Unregister_default_instance_;
class ServiceRequest_FindDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRequest_Find>
      _instance;
} _ServiceRequest_Find_default_instance_;
class ServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRequest>
      _instance;
} _ServiceRequest_default_instance_;
class ServiceReply_FindResult_LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceReply_FindResult_Location>
      _instance;
} _ServiceReply_FindResult_Location_default_instance_;
class ServiceReply_FindResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceReply_FindResult>
      _instance;
} _ServiceReply_FindResult_default_instance_;
class ServiceReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceReply>
      _instance;
} _ServiceReply_default_instance_;
}  // namespace directoryd
namespace protobuf_Services_2eproto {
void InitDefaultsTxtFieldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::directoryd::_TxtField_default_instance_;
    new (ptr) ::directoryd::TxtField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::TxtField::InitAsDefaultInstance();
}

void InitDefaultsTxtField() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTxtFieldImpl);
}

void InitDefaultsServiceRequest_Register_LocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::directoryd::_ServiceRequest_Register_Location_default_instance_;
    new (ptr) ::directoryd::ServiceRequest_Register_Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceRequest_Register_Location::InitAsDefaultInstance();
}

void InitDefaultsServiceRequest_Register_Location() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceRequest_Register_LocationImpl);
}

void InitDefaultsServiceRequest_RegisterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Services_2eproto::InitDefaultsServiceRequest_Register_Location();
  protobuf_Services_2eproto::InitDefaultsTxtField();
  {
    void* ptr = &::directoryd::_ServiceRequest_Register_default_instance_;
    new (ptr) ::directoryd::ServiceRequest_Register();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceRequest_Register::InitAsDefaultInstance();
}

void InitDefaultsServiceRequest_Register() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceRequest_RegisterImpl);
}

void InitDefaultsServiceRequest_UnregisterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::directoryd::_ServiceRequest_Unregister_default_instance_;
    new (ptr) ::directoryd::ServiceRequest_Unregister();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceRequest_Unregister::InitAsDefaultInstance();
}

void InitDefaultsServiceRequest_Unregister() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceRequest_UnregisterImpl);
}

void InitDefaultsServiceRequest_FindImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Services_2eproto::InitDefaultsTxtField();
  {
    void* ptr = &::directoryd::_ServiceRequest_Find_default_instance_;
    new (ptr) ::directoryd::ServiceRequest_Find();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceRequest_Find::InitAsDefaultInstance();
}

void InitDefaultsServiceRequest_Find() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceRequest_FindImpl);
}

void InitDefaultsServiceRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Services_2eproto::InitDefaultsServiceRequest_Register();
  protobuf_Services_2eproto::InitDefaultsServiceRequest_Unregister();
  protobuf_Services_2eproto::InitDefaultsServiceRequest_Find();
  {
    void* ptr = &::directoryd::_ServiceRequest_default_instance_;
    new (ptr) ::directoryd::ServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceRequest::InitAsDefaultInstance();
}

void InitDefaultsServiceRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceRequestImpl);
}

void InitDefaultsServiceReply_FindResult_LocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::directoryd::_ServiceReply_FindResult_Location_default_instance_;
    new (ptr) ::directoryd::ServiceReply_FindResult_Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceReply_FindResult_Location::InitAsDefaultInstance();
}

void InitDefaultsServiceReply_FindResult_Location() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceReply_FindResult_LocationImpl);
}

void InitDefaultsServiceReply_FindResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Services_2eproto::InitDefaultsServiceReply_FindResult_Location();
  protobuf_Services_2eproto::InitDefaultsTxtField();
  {
    void* ptr = &::directoryd::_ServiceReply_FindResult_default_instance_;
    new (ptr) ::directoryd::ServiceReply_FindResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceReply_FindResult::InitAsDefaultInstance();
}

void InitDefaultsServiceReply_FindResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceReply_FindResultImpl);
}

void InitDefaultsServiceReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Services_2eproto::InitDefaultsServiceReply_FindResult();
  {
    void* ptr = &::directoryd::_ServiceReply_default_instance_;
    new (ptr) ::directoryd::ServiceReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::directoryd::ServiceReply::InitAsDefaultInstance();
}

void InitDefaultsServiceReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServiceReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::TxtField, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::TxtField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::TxtField, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::TxtField, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register_Location, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register_Location, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register_Location, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register_Location, resource_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Register, txt_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Unregister, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Unregister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Unregister, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Find, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Find, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Find, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Find, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest_Find, txt_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest, register__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest, unregister_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceRequest, find_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult_Location, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult_Location, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult_Location, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult_Location, resource_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply_FindResult, txt_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::directoryd::ServiceReply, findresult_),
  1,
  2,
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::directoryd::TxtField)},
  { 9, 17, sizeof(::directoryd::ServiceRequest_Register_Location)},
  { 20, 28, sizeof(::directoryd::ServiceRequest_Register)},
  { 31, 37, sizeof(::directoryd::ServiceRequest_Unregister)},
  { 38, 46, sizeof(::directoryd::ServiceRequest_Find)},
  { 49, 58, sizeof(::directoryd::ServiceRequest)},
  { 62, 70, sizeof(::directoryd::ServiceReply_FindResult_Location)},
  { 73, 80, sizeof(::directoryd::ServiceReply_FindResult)},
  { 82, 91, sizeof(::directoryd::ServiceReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_TxtField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceRequest_Register_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceRequest_Register_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceRequest_Unregister_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceRequest_Find_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceReply_FindResult_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceReply_FindResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::directoryd::_ServiceReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Services.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Services.proto\022\ndirectoryd\"&\n\010TxtField"
      "\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\376\003\n\016Service"
      "Request\0220\n\004type\030\001 \002(\0162\027.directoryd.Reque"
      "stType:\tHEARTBEAT\0225\n\010register\030\002 \001(\0132#.di"
      "rectoryd.ServiceRequest.Register\0229\n\nunre"
      "gister\030\003 \001(\0132%.directoryd.ServiceRequest"
      ".Unregister\022-\n\004find\030\004 \001(\0132\037.directoryd.S"
      "erviceRequest.Find\032\265\001\n\010Register\022\014\n\004name\030"
      "\001 \002(\t\022>\n\010location\030\002 \003(\0132,.directoryd.Ser"
      "viceRequest.Register.Location\022!\n\003txt\030\003 \003"
      "(\0132\024.directoryd.TxtField\0328\n\010Location\022\014\n\004"
      "type\030\001 \002(\t\022\014\n\004port\030\002 \001(\005\022\020\n\010resource\030\003 \001"
      "(\t\032\032\n\nUnregister\022\014\n\004name\030\001 \002(\t\032E\n\004Find\022\014"
      "\n\004type\030\001 \002(\t\022\014\n\004name\030\002 \001(\t\022!\n\003txt\030\003 \003(\0132"
      "\024.directoryd.TxtField\"\304\002\n\014ServiceReply\022%"
      "\n\004type\030\001 \002(\0162\027.directoryd.RequestType\022\025\n"
      "\007success\030\002 \002(\010:\004true\022\016\n\006result\030\003 \001(\t\0227\n\n"
      "findresult\030\004 \003(\0132#.directoryd.ServiceRep"
      "ly.FindResult\032\254\001\n\nFindResult\022>\n\010location"
      "\030\001 \002(\0132,.directoryd.ServiceReply.FindRes"
      "ult.Location\022!\n\003txt\030\002 \003(\0132\024.directoryd.T"
      "xtField\032;\n\010Location\022\017\n\007address\030\001 \001(\t\022\014\n\004"
      "port\030\002 \001(\005\022\020\n\010resource\030\003 \001(\t*D\n\013RequestT"
      "ype\022\014\n\010REGISTER\020\001\022\016\n\nUNREGISTER\020\002\022\010\n\004FIN"
      "D\020\003\022\r\n\tHEARTBEAT\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 978);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Services.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Services_2eproto
namespace directoryd {
const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Services_2eproto::file_level_enum_descriptors[0];
}
bool RequestType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TxtField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxtField::kKeyFieldNumber;
const int TxtField::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxtField::TxtField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsTxtField();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.TxtField)
}
TxtField::TxtField(const TxtField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:directoryd.TxtField)
}

void TxtField::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TxtField::~TxtField() {
  // @@protoc_insertion_point(destructor:directoryd.TxtField)
  SharedDtor();
}

void TxtField::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxtField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxtField::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxtField& TxtField::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsTxtField();
  return *internal_default_instance();
}

TxtField* TxtField::New(::google::protobuf::Arena* arena) const {
  TxtField* n = new TxtField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxtField::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.TxtField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxtField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.TxtField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.TxtField.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.TxtField.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.TxtField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.TxtField)
  return false;
#undef DO_
}

void TxtField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.TxtField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.TxtField.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.TxtField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.TxtField)
}

::google::protobuf::uint8* TxtField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.TxtField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.TxtField.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.TxtField.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.TxtField)
  return target;
}

size_t TxtField::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:directoryd.TxtField)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
size_t TxtField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.TxtField)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxtField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.TxtField)
  GOOGLE_DCHECK_NE(&from, this);
  const TxtField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxtField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.TxtField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.TxtField)
    MergeFrom(*source);
  }
}

void TxtField::MergeFrom(const TxtField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.TxtField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void TxtField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.TxtField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxtField::CopyFrom(const TxtField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.TxtField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxtField::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TxtField::Swap(TxtField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxtField::InternalSwap(TxtField* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxtField::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRequest_Register_Location::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRequest_Register_Location::kTypeFieldNumber;
const int ServiceRequest_Register_Location::kPortFieldNumber;
const int ServiceRequest_Register_Location::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRequest_Register_Location::ServiceRequest_Register_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Register_Location();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceRequest.Register.Location)
}
ServiceRequest_Register_Location::ServiceRequest_Register_Location(const ServiceRequest_Register_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resource()) {
    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceRequest.Register.Location)
}

void ServiceRequest_Register_Location::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

ServiceRequest_Register_Location::~ServiceRequest_Register_Location() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceRequest.Register.Location)
  SharedDtor();
}

void ServiceRequest_Register_Location::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceRequest_Register_Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceRequest_Register_Location::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRequest_Register_Location& ServiceRequest_Register_Location::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Register_Location();
  return *internal_default_instance();
}

ServiceRequest_Register_Location* ServiceRequest_Register_Location::New(::google::protobuf::Arena* arena) const {
  ServiceRequest_Register_Location* n = new ServiceRequest_Register_Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceRequest_Register_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceRequest.Register.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!resource_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resource_.UnsafeRawStringPointer())->clear();
    }
  }
  port_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceRequest_Register_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceRequest.Register.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceRequest.Register.Location.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string resource = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resource().data(), static_cast<int>(this->resource().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceRequest.Register.Location.resource");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceRequest.Register.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceRequest.Register.Location)
  return false;
#undef DO_
}

void ServiceRequest_Register_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceRequest.Register.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Register.Location.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional int32 port = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // optional string resource = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Register.Location.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->resource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceRequest.Register.Location)
}

::google::protobuf::uint8* ServiceRequest_Register_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceRequest.Register.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Register.Location.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional int32 port = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // optional string resource = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Register.Location.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->resource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceRequest.Register.Location)
  return target;
}

size_t ServiceRequest_Register_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceRequest.Register.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string resource = 3;
    if (has_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resource());
    }

    // optional int32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceRequest_Register_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceRequest.Register.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRequest_Register_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRequest_Register_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceRequest.Register.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceRequest.Register.Location)
    MergeFrom(*source);
  }
}

void ServiceRequest_Register_Location::MergeFrom(const ServiceRequest_Register_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceRequest.Register.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_resource();
      resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServiceRequest_Register_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceRequest.Register.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRequest_Register_Location::CopyFrom(const ServiceRequest_Register_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceRequest.Register.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRequest_Register_Location::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ServiceRequest_Register_Location::Swap(ServiceRequest_Register_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRequest_Register_Location::InternalSwap(ServiceRequest_Register_Location* other) {
  using std::swap;
  type_.Swap(&other->type_);
  resource_.Swap(&other->resource_);
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceRequest_Register_Location::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRequest_Register::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRequest_Register::kNameFieldNumber;
const int ServiceRequest_Register::kLocationFieldNumber;
const int ServiceRequest_Register::kTxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRequest_Register::ServiceRequest_Register()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Register();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceRequest.Register)
}
ServiceRequest_Register::ServiceRequest_Register(const ServiceRequest_Register& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      location_(from.location_),
      txt_(from.txt_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceRequest.Register)
}

void ServiceRequest_Register::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServiceRequest_Register::~ServiceRequest_Register() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceRequest.Register)
  SharedDtor();
}

void ServiceRequest_Register::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceRequest_Register::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceRequest_Register::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRequest_Register& ServiceRequest_Register::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Register();
  return *internal_default_instance();
}

ServiceRequest_Register* ServiceRequest_Register::New(::google::protobuf::Arena* arena) const {
  ServiceRequest_Register* n = new ServiceRequest_Register;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceRequest_Register::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceRequest.Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.Clear();
  txt_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceRequest_Register::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceRequest.Register)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceRequest.Register.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .directoryd.ServiceRequest.Register.Location location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .directoryd.TxtField txt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_txt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceRequest.Register)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceRequest.Register)
  return false;
#undef DO_
}

void ServiceRequest_Register::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceRequest.Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Register.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .directoryd.ServiceRequest.Register.Location location = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->location_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->location(static_cast<int>(i)), output);
  }

  // repeated .directoryd.TxtField txt = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txt_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->txt(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceRequest.Register)
}

::google::protobuf::uint8* ServiceRequest_Register::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceRequest.Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Register.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .directoryd.ServiceRequest.Register.Location location = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->location_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->location(static_cast<int>(i)), deterministic, target);
  }

  // repeated .directoryd.TxtField txt = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txt_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->txt(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceRequest.Register)
  return target;
}

size_t ServiceRequest_Register::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceRequest.Register)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .directoryd.ServiceRequest.Register.Location location = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->location_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->location(static_cast<int>(i)));
    }
  }

  // repeated .directoryd.TxtField txt = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->txt_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txt(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceRequest_Register::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceRequest.Register)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRequest_Register* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRequest_Register>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceRequest.Register)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceRequest.Register)
    MergeFrom(*source);
  }
}

void ServiceRequest_Register::MergeFrom(const ServiceRequest_Register& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceRequest.Register)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  location_.MergeFrom(from.location_);
  txt_.MergeFrom(from.txt_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ServiceRequest_Register::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceRequest.Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRequest_Register::CopyFrom(const ServiceRequest_Register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceRequest.Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRequest_Register::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->location())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->txt())) return false;
  return true;
}

void ServiceRequest_Register::Swap(ServiceRequest_Register* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRequest_Register::InternalSwap(ServiceRequest_Register* other) {
  using std::swap;
  location_.InternalSwap(&other->location_);
  txt_.InternalSwap(&other->txt_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceRequest_Register::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRequest_Unregister::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRequest_Unregister::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRequest_Unregister::ServiceRequest_Unregister()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Unregister();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceRequest.Unregister)
}
ServiceRequest_Unregister::ServiceRequest_Unregister(const ServiceRequest_Unregister& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceRequest.Unregister)
}

void ServiceRequest_Unregister::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServiceRequest_Unregister::~ServiceRequest_Unregister() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceRequest.Unregister)
  SharedDtor();
}

void ServiceRequest_Unregister::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceRequest_Unregister::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceRequest_Unregister::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRequest_Unregister& ServiceRequest_Unregister::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Unregister();
  return *internal_default_instance();
}

ServiceRequest_Unregister* ServiceRequest_Unregister::New(::google::protobuf::Arena* arena) const {
  ServiceRequest_Unregister* n = new ServiceRequest_Unregister;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceRequest_Unregister::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceRequest.Unregister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceRequest_Unregister::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceRequest.Unregister)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceRequest.Unregister.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceRequest.Unregister)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceRequest.Unregister)
  return false;
#undef DO_
}

void ServiceRequest_Unregister::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceRequest.Unregister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Unregister.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceRequest.Unregister)
}

::google::protobuf::uint8* ServiceRequest_Unregister::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceRequest.Unregister)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Unregister.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceRequest.Unregister)
  return target;
}

size_t ServiceRequest_Unregister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceRequest.Unregister)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceRequest_Unregister::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceRequest.Unregister)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRequest_Unregister* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRequest_Unregister>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceRequest.Unregister)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceRequest.Unregister)
    MergeFrom(*source);
  }
}

void ServiceRequest_Unregister::MergeFrom(const ServiceRequest_Unregister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceRequest.Unregister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ServiceRequest_Unregister::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceRequest.Unregister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRequest_Unregister::CopyFrom(const ServiceRequest_Unregister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceRequest.Unregister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRequest_Unregister::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ServiceRequest_Unregister::Swap(ServiceRequest_Unregister* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRequest_Unregister::InternalSwap(ServiceRequest_Unregister* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceRequest_Unregister::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRequest_Find::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRequest_Find::kTypeFieldNumber;
const int ServiceRequest_Find::kNameFieldNumber;
const int ServiceRequest_Find::kTxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRequest_Find::ServiceRequest_Find()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Find();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceRequest.Find)
}
ServiceRequest_Find::ServiceRequest_Find(const ServiceRequest_Find& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      txt_(from.txt_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceRequest.Find)
}

void ServiceRequest_Find::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServiceRequest_Find::~ServiceRequest_Find() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceRequest.Find)
  SharedDtor();
}

void ServiceRequest_Find::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceRequest_Find::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceRequest_Find::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRequest_Find& ServiceRequest_Find::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceRequest_Find();
  return *internal_default_instance();
}

ServiceRequest_Find* ServiceRequest_Find::New(::google::protobuf::Arena* arena) const {
  ServiceRequest_Find* n = new ServiceRequest_Find;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceRequest_Find::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceRequest.Find)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txt_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceRequest_Find::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceRequest.Find)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceRequest.Find.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceRequest.Find.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .directoryd.TxtField txt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_txt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceRequest.Find)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceRequest.Find)
  return false;
#undef DO_
}

void ServiceRequest_Find::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceRequest.Find)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Find.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Find.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .directoryd.TxtField txt = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txt_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->txt(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceRequest.Find)
}

::google::protobuf::uint8* ServiceRequest_Find::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceRequest.Find)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Find.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceRequest.Find.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .directoryd.TxtField txt = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txt_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->txt(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceRequest.Find)
  return target;
}

size_t ServiceRequest_Find::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceRequest.Find)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }
  // repeated .directoryd.TxtField txt = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->txt_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txt(static_cast<int>(i)));
    }
  }

  // optional string name = 2;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceRequest_Find::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceRequest.Find)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRequest_Find* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRequest_Find>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceRequest.Find)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceRequest.Find)
    MergeFrom(*source);
  }
}

void ServiceRequest_Find::MergeFrom(const ServiceRequest_Find& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceRequest.Find)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txt_.MergeFrom(from.txt_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
}

void ServiceRequest_Find::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceRequest.Find)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRequest_Find::CopyFrom(const ServiceRequest_Find& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceRequest.Find)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRequest_Find::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->txt())) return false;
  return true;
}

void ServiceRequest_Find::Swap(ServiceRequest_Find* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRequest_Find::InternalSwap(ServiceRequest_Find* other) {
  using std::swap;
  txt_.InternalSwap(&other->txt_);
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceRequest_Find::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRequest::InitAsDefaultInstance() {
  ::directoryd::_ServiceRequest_default_instance_._instance.get_mutable()->register__ = const_cast< ::directoryd::ServiceRequest_Register*>(
      ::directoryd::ServiceRequest_Register::internal_default_instance());
  ::directoryd::_ServiceRequest_default_instance_._instance.get_mutable()->unregister_ = const_cast< ::directoryd::ServiceRequest_Unregister*>(
      ::directoryd::ServiceRequest_Unregister::internal_default_instance());
  ::directoryd::_ServiceRequest_default_instance_._instance.get_mutable()->find_ = const_cast< ::directoryd::ServiceRequest_Find*>(
      ::directoryd::ServiceRequest_Find::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRequest::kTypeFieldNumber;
const int ServiceRequest::kRegisterFieldNumber;
const int ServiceRequest::kUnregisterFieldNumber;
const int ServiceRequest::kFindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRequest::ServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceRequest)
}
ServiceRequest::ServiceRequest(const ServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_register_()) {
    register__ = new ::directoryd::ServiceRequest_Register(*from.register__);
  } else {
    register__ = NULL;
  }
  if (from.has_unregister()) {
    unregister_ = new ::directoryd::ServiceRequest_Unregister(*from.unregister_);
  } else {
    unregister_ = NULL;
  }
  if (from.has_find()) {
    find_ = new ::directoryd::ServiceRequest_Find(*from.find_);
  } else {
    find_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceRequest)
}

void ServiceRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&register__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&find_) -
      reinterpret_cast<char*>(&register__)) + sizeof(find_));
  type_ = 4;
}

ServiceRequest::~ServiceRequest() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceRequest)
  SharedDtor();
}

void ServiceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete register__;
  if (this != internal_default_instance()) delete unregister_;
  if (this != internal_default_instance()) delete find_;
}

void ServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceRequest::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRequest& ServiceRequest::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceRequest();
  return *internal_default_instance();
}

ServiceRequest* ServiceRequest::New(::google::protobuf::Arena* arena) const {
  ServiceRequest* n = new ServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(register__ != NULL);
      register__->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(unregister_ != NULL);
      unregister_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(find_ != NULL);
      find_->Clear();
    }
    type_ = 4;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .directoryd.RequestType type = 1 [default = HEARTBEAT];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::directoryd::RequestType_IsValid(value)) {
            set_type(static_cast< ::directoryd::RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .directoryd.ServiceRequest.Register register = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .directoryd.ServiceRequest.Unregister unregister = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unregister()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .directoryd.ServiceRequest.Find find = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_find()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceRequest)
  return false;
#undef DO_
}

void ServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .directoryd.RequestType type = 1 [default = HEARTBEAT];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .directoryd.ServiceRequest.Register register = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->register__, output);
  }

  // optional .directoryd.ServiceRequest.Unregister unregister = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->unregister_, output);
  }

  // optional .directoryd.ServiceRequest.Find find = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->find_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceRequest)
}

::google::protobuf::uint8* ServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .directoryd.RequestType type = 1 [default = HEARTBEAT];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .directoryd.ServiceRequest.Register register = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->register__, deterministic, target);
  }

  // optional .directoryd.ServiceRequest.Unregister unregister = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->unregister_, deterministic, target);
  }

  // optional .directoryd.ServiceRequest.Find find = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->find_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceRequest)
  return target;
}

size_t ServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .directoryd.RequestType type = 1 [default = HEARTBEAT];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .directoryd.ServiceRequest.Register register = 2;
    if (has_register_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->register__);
    }

    // optional .directoryd.ServiceRequest.Unregister unregister = 3;
    if (has_unregister()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->unregister_);
    }

    // optional .directoryd.ServiceRequest.Find find = 4;
    if (has_find()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->find_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceRequest)
    MergeFrom(*source);
  }
}

void ServiceRequest::MergeFrom(const ServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_register_()->::directoryd::ServiceRequest_Register::MergeFrom(from.register_());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_unregister()->::directoryd::ServiceRequest_Unregister::MergeFrom(from.unregister());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_find()->::directoryd::ServiceRequest_Find::MergeFrom(from.find());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRequest::CopyFrom(const ServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_register_()) {
    if (!this->register__->IsInitialized()) return false;
  }
  if (has_unregister()) {
    if (!this->unregister_->IsInitialized()) return false;
  }
  if (has_find()) {
    if (!this->find_->IsInitialized()) return false;
  }
  return true;
}

void ServiceRequest::Swap(ServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRequest::InternalSwap(ServiceRequest* other) {
  using std::swap;
  swap(register__, other->register__);
  swap(unregister_, other->unregister_);
  swap(find_, other->find_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceRequest::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceReply_FindResult_Location::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceReply_FindResult_Location::kAddressFieldNumber;
const int ServiceReply_FindResult_Location::kPortFieldNumber;
const int ServiceReply_FindResult_Location::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceReply_FindResult_Location::ServiceReply_FindResult_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceReply_FindResult_Location();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceReply.FindResult.Location)
}
ServiceReply_FindResult_Location::ServiceReply_FindResult_Location(const ServiceReply_FindResult_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resource()) {
    resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceReply.FindResult.Location)
}

void ServiceReply_FindResult_Location::SharedCtor() {
  _cached_size_ = 0;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

ServiceReply_FindResult_Location::~ServiceReply_FindResult_Location() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceReply.FindResult.Location)
  SharedDtor();
}

void ServiceReply_FindResult_Location::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceReply_FindResult_Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceReply_FindResult_Location::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceReply_FindResult_Location& ServiceReply_FindResult_Location::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceReply_FindResult_Location();
  return *internal_default_instance();
}

ServiceReply_FindResult_Location* ServiceReply_FindResult_Location::New(::google::protobuf::Arena* arena) const {
  ServiceReply_FindResult_Location* n = new ServiceReply_FindResult_Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceReply_FindResult_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceReply.FindResult.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*address_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!resource_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resource_.UnsafeRawStringPointer())->clear();
    }
  }
  port_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceReply_FindResult_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceReply.FindResult.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceReply.FindResult.Location.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string resource = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resource().data(), static_cast<int>(this->resource().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceReply.FindResult.Location.resource");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceReply.FindResult.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceReply.FindResult.Location)
  return false;
#undef DO_
}

void ServiceReply_FindResult_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceReply.FindResult.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceReply.FindResult.Location.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // optional int32 port = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->port(), output);
  }

  // optional string resource = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceReply.FindResult.Location.resource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->resource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceReply.FindResult.Location)
}

::google::protobuf::uint8* ServiceReply_FindResult_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceReply.FindResult.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceReply.FindResult.Location.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // optional int32 port = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->port(), target);
  }

  // optional string resource = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resource().data(), static_cast<int>(this->resource().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceReply.FindResult.Location.resource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->resource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceReply.FindResult.Location)
  return target;
}

size_t ServiceReply_FindResult_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceReply.FindResult.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string address = 1;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional string resource = 3;
    if (has_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resource());
    }

    // optional int32 port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceReply_FindResult_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceReply.FindResult.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceReply_FindResult_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceReply_FindResult_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceReply.FindResult.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceReply.FindResult.Location)
    MergeFrom(*source);
  }
}

void ServiceReply_FindResult_Location::MergeFrom(const ServiceReply_FindResult_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceReply.FindResult.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_resource();
      resource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_);
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServiceReply_FindResult_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceReply.FindResult.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceReply_FindResult_Location::CopyFrom(const ServiceReply_FindResult_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceReply.FindResult.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceReply_FindResult_Location::IsInitialized() const {
  return true;
}

void ServiceReply_FindResult_Location::Swap(ServiceReply_FindResult_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceReply_FindResult_Location::InternalSwap(ServiceReply_FindResult_Location* other) {
  using std::swap;
  address_.Swap(&other->address_);
  resource_.Swap(&other->resource_);
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceReply_FindResult_Location::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceReply_FindResult::InitAsDefaultInstance() {
  ::directoryd::_ServiceReply_FindResult_default_instance_._instance.get_mutable()->location_ = const_cast< ::directoryd::ServiceReply_FindResult_Location*>(
      ::directoryd::ServiceReply_FindResult_Location::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceReply_FindResult::kLocationFieldNumber;
const int ServiceReply_FindResult::kTxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceReply_FindResult::ServiceReply_FindResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceReply_FindResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceReply.FindResult)
}
ServiceReply_FindResult::ServiceReply_FindResult(const ServiceReply_FindResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      txt_(from.txt_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::directoryd::ServiceReply_FindResult_Location(*from.location_);
  } else {
    location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceReply.FindResult)
}

void ServiceReply_FindResult::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
}

ServiceReply_FindResult::~ServiceReply_FindResult() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceReply.FindResult)
  SharedDtor();
}

void ServiceReply_FindResult::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void ServiceReply_FindResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceReply_FindResult::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceReply_FindResult& ServiceReply_FindResult::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceReply_FindResult();
  return *internal_default_instance();
}

ServiceReply_FindResult* ServiceReply_FindResult::New(::google::protobuf::Arena* arena) const {
  ServiceReply_FindResult* n = new ServiceReply_FindResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceReply_FindResult::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceReply.FindResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txt_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(location_ != NULL);
    location_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceReply_FindResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceReply.FindResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .directoryd.ServiceReply.FindResult.Location location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .directoryd.TxtField txt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_txt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceReply.FindResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceReply.FindResult)
  return false;
#undef DO_
}

void ServiceReply_FindResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceReply.FindResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .directoryd.ServiceReply.FindResult.Location location = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->location_, output);
  }

  // repeated .directoryd.TxtField txt = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txt_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->txt(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceReply.FindResult)
}

::google::protobuf::uint8* ServiceReply_FindResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceReply.FindResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .directoryd.ServiceReply.FindResult.Location location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->location_, deterministic, target);
  }

  // repeated .directoryd.TxtField txt = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txt_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->txt(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceReply.FindResult)
  return target;
}

size_t ServiceReply_FindResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceReply.FindResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .directoryd.ServiceReply.FindResult.Location location = 1;
  if (has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->location_);
  }
  // repeated .directoryd.TxtField txt = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->txt_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txt(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceReply_FindResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceReply.FindResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceReply_FindResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceReply_FindResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceReply.FindResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceReply.FindResult)
    MergeFrom(*source);
  }
}

void ServiceReply_FindResult::MergeFrom(const ServiceReply_FindResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceReply.FindResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txt_.MergeFrom(from.txt_);
  if (from.has_location()) {
    mutable_location()->::directoryd::ServiceReply_FindResult_Location::MergeFrom(from.location());
  }
}

void ServiceReply_FindResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceReply.FindResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceReply_FindResult::CopyFrom(const ServiceReply_FindResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceReply.FindResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceReply_FindResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->txt())) return false;
  return true;
}

void ServiceReply_FindResult::Swap(ServiceReply_FindResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceReply_FindResult::InternalSwap(ServiceReply_FindResult* other) {
  using std::swap;
  txt_.InternalSwap(&other->txt_);
  swap(location_, other->location_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceReply_FindResult::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceReply::kTypeFieldNumber;
const int ServiceReply::kSuccessFieldNumber;
const int ServiceReply::kResultFieldNumber;
const int ServiceReply::kFindresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceReply::ServiceReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Services_2eproto::InitDefaultsServiceReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:directoryd.ServiceReply)
}
ServiceReply::ServiceReply(const ServiceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      findresult_(from.findresult_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&type_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:directoryd.ServiceReply)
}

void ServiceReply::SharedCtor() {
  _cached_size_ = 0;
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
  success_ = true;
}

ServiceReply::~ServiceReply() {
  // @@protoc_insertion_point(destructor:directoryd.ServiceReply)
  SharedDtor();
}

void ServiceReply::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceReply::descriptor() {
  ::protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceReply& ServiceReply::default_instance() {
  ::protobuf_Services_2eproto::InitDefaultsServiceReply();
  return *internal_default_instance();
}

ServiceReply* ServiceReply::New(::google::protobuf::Arena* arena) const {
  ServiceReply* n = new ServiceReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:directoryd.ServiceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  findresult_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!result_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*result_.UnsafeRawStringPointer())->clear();
    }
    type_ = 1;
    success_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:directoryd.ServiceReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .directoryd.RequestType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::directoryd::RequestType_IsValid(value)) {
            set_type(static_cast< ::directoryd::RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool success = 2 [default = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "directoryd.ServiceReply.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .directoryd.ServiceReply.FindResult findresult = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_findresult()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:directoryd.ServiceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:directoryd.ServiceReply)
  return false;
#undef DO_
}

void ServiceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:directoryd.ServiceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .directoryd.RequestType type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required bool success = 2 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // optional string result = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceReply.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result(), output);
  }

  // repeated .directoryd.ServiceReply.FindResult findresult = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->findresult_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->findresult(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:directoryd.ServiceReply)
}

::google::protobuf::uint8* ServiceReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:directoryd.ServiceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .directoryd.RequestType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required bool success = 2 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // optional string result = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "directoryd.ServiceReply.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result(), target);
  }

  // repeated .directoryd.ServiceReply.FindResult findresult = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->findresult_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->findresult(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:directoryd.ServiceReply)
  return target;
}

size_t ServiceReply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:directoryd.ServiceReply)
  size_t total_size = 0;

  if (has_type()) {
    // required .directoryd.RequestType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_success()) {
    // required bool success = 2 [default = true];
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ServiceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:directoryd.ServiceReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .directoryd.RequestType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required bool success = 2 [default = true];
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .directoryd.ServiceReply.FindResult findresult = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->findresult_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->findresult(static_cast<int>(i)));
    }
  }

  // optional string result = 3;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:directoryd.ServiceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:directoryd.ServiceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:directoryd.ServiceReply)
    MergeFrom(*source);
  }
}

void ServiceReply::MergeFrom(const ServiceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:directoryd.ServiceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  findresult_.MergeFrom(from.findresult_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServiceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:directoryd.ServiceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceReply::CopyFrom(const ServiceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:directoryd.ServiceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->findresult())) return false;
  return true;
}

void ServiceReply::Swap(ServiceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceReply::InternalSwap(ServiceReply* other) {
  using std::swap;
  findresult_.InternalSwap(&other->findresult_);
  result_.Swap(&other->result_);
  swap(type_, other->type_);
  swap(success_, other->success_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceReply::GetMetadata() const {
  protobuf_Services_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Services_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace directoryd

// @@protoc_insertion_point(global_scope)
